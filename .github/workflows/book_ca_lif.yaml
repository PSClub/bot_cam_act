# This workflow runs the tennis court booking script when triggered by an external event.

name: Tennis Court Booker

on:
  # This allows the workflow to be triggered by an external webhook call.
  repository_dispatch:
    types: [book-courts-event]

  # This is kept so you can still run the workflow manually from the Actions tab for testing.
  workflow_dispatch:

jobs:
  book-courts:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers
      run: playwright install --with-deps

    - name: Run booking script
      # The script will still get its credentials from the repository secrets.
      env:
        CAMDEN_USERNAME: ${{ secrets.CAMDEN_USERNAME }}
        CAMDEN_PASSWORD: ${{ secrets.CAMDEN_PASSWORD }}
        GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        KYLE_EMAIL_ADDRESS: ${{ vars.KYLE_EMAIL_ADDRESS }}
        IT_EMAIL_ADDRESS: ${{ vars.IT_EMAIL_ADDRESS }
      run: python main.py

    - name: Upload Screenshots Artifact
      # This step now runs always, so any generated screenshots will be saved.
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: booking-screenshots
        path: screenshots/
        # This option prevents the workflow from failing if no screenshots were created.

        if-no-files-found: ignore
